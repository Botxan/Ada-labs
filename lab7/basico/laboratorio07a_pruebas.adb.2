WITH Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO, Laboratorio07a;
USE Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO, Laboratorio07a;

PROCEDURE laboratorio07a_pruebas IS
   cont1, cont2, N: Integer;
   L1: T_Lista_Estatica;
   C: T_Complejo_Tri;
   P: T_Complejo_Polar;
BEGIN
   Put_Line("*****Casos de pruebas para laboratorio07a (basico)*****");


   ----------
   -- esta --
   ----------
   new_line(3);
   Put("**esta**");
   new_line(2);

   L1.Dato:= (2,-3,5,0,5,9, others => Integer'First);
   L1.cont := 6;
   N:= 9;
   Put_Line("1.- Lista: (2,-3,5,0,5,9, ...). Cont: 6. N: 9. Resultado: TRUE");
   Put_Line(esta(L1, N)'img);

   new_line;

   L1.cont := 4;
   Put_Line("2.- Lista: (2,-3,5,0,5,9, ...). Cont: 4. N: 9. Resultado: FALSE");
   Put_Line(esta(L1, N)'img);

   new_line;

   L1.Dato := (1,2,3,4,5,6,7,8,9, others => Integer'First);
   L1.cont := 9;
   N:= 1;
   Put_Line("3.- Lista: (1,2,3,4,5,6,7,8,9...). Cont: 9. N: 1. Resultado: TRUE");
   Put_Line(esta(L1, N)'img);

   new_line;

   L1.cont := 1;
   Put_Line("4.- Lista (1,2,3,4,5,6,7,8,9...). Cont: 1. N: 1. Resultado: TRUE");
   Put_Line(esta(L1, N)'img);


   --------------
   -- posicion --
   --------------
   new_line(3);
   Put("**posicion**");
   new_line(2);

   L1.Dato:= (2,-3,5,0,5,9, others => Integer'First);
   L1.cont := 6;
   N:= 9;
   Put_Line("1.- Lista: (2,-3,5,0,5,9, ...). Cont: 6. Num 9. Resultado: posicion 6");
   put(posicion(L1, N));
   new_line;

   new_line;

   L1.cont := 4;
   Put_Line("2.- Lista: (2,-3,5,0,5,9, ...). Cont: 4. Num: 9. Resultado: posicion Integer'Last");
   Put(posicion(L1, N));
   new_line;

   new_line;

   L1.Dato := (1,2,3,4,5,6,7,8,9, others => Integer'First);
   L1.cont := 9;
   N:= 4;
   Put_Line("3.- Lista: (1,2,3,4,5,6,7,8,9...). Cont: 9. Num: 4. Resultado: posicion 4");
   Put(posicion(L1, N));
   new_line;

   new_line;

   L1.cont := 1;
   Put_Line("4.- Lista (1,2,3,4,5,6,7,8,9...). Cont: 1. Num: 4. Resultado: posicion Integer'Last");
   Put(posicion(L1, N));
   new_line;


   -----------
   -- Polar --
   -----------
   -- Comprobar resultados: https://www.calcuvio.com/binomica-polar
   new_line(3);
   Put("**polar**");
   new_line(2);

   C:= (3.14, 2.99);
   Put_Line("1.- Numero en forma trigonometrica: (3.14, 2.99) -- Modulo: 4.34. Argumento: 43.60.");
   P:= Polar(C);
   Put("Modulo: "); Put(P.modulo, 1, 2, 0);
   new_line;
   Put("Argumento: "); Put(P.argumento, 1, 2, 0);

   new_line(2);

   C:= (36.72, 79.21);
   Put_Line("2.- Numero en forma trigonometrica: (36.72, 79.21) -- Modulo: 87.31. Argumento: 65.13.");
   P:= Polar(C);
   Put("Modulo: "); Put(P.modulo, 1, 2, 0);
   new_line;
   Put("Argumento: "); Put(P.argumento, 1, 2, 0);

   new_line(2);

   C:= (0.1, 0.1);
   Put_Line("3.- Numero en forma trigonometrica: (0.1,0.1) -- Modulo: 0.014. Argumento: 45.");
   P:= Polar(C);
   Put("Modulo: "); Put(P.modulo, 1, 2, 0);
   new_line;
   Put("Argumento: "); Put(P.argumento, 1, 2, 0);


   -----------------
   -- Son_Iguales --
   -----------------
   new_line(3);
   Put("**Son_Iguales**");
   new_line(2);



END laboratorio07a_pruebas;