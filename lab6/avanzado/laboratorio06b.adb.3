WITH Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO;
USE Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO;

package body Laboratorio06b is

   ----------------
   -- Cent_A_Sex --
   ----------------

   procedure Cent_A_Sex
     (Centesimales: in Float;
      Sexagesimales:out T_Grados_Sex)
   is
      total_grados: Float;
      g, m, s: Natural;
   begin
      total_grados:= centesimales * 90.0 / 100.0;
      g:= Integer(Float'Truncation(total_grados));
      m:= Integer(Float'Truncation((total_grados - Float(g)) * 60.0));
      s:= Integer(Float'Truncation((total_grados - Float(g) - Float(m)/60.0) * 3600.0));
      sexagesimales := (g, m, s);
   end Cent_A_Sex;

   -------------------
   -- Rotar_Derecha --
   -------------------

   procedure Rotar_Derecha (V:in out T_Vector_Enteros) is
      ultimo:Integer := V(V'Last);
   begin
      for i in reverse V'First+1..V'Last loop
         V(i) := V(i-1);
      end loop;
      V(V'First) := ultimo;
   end Rotar_Derecha;

   -----------------------------
   -- esta_en_vector_ordenado --
   -----------------------------

   function esta_en_vector_ordenado(V: in T_vector_enteros; N: in Integer) return Boolean is
      i: Integer := V'first;
      n_encontrado: Boolean:= N = V(i);
   begin
      while (not n_encontrado) and (i /= V'last+1) loop
         n_encontrado:= N = V(i);
         i := i+1;
      end loop;

      return n_encontrado;
   end esta_en_vector_ordenado;

   --------------------------------
   -- eliminar_elemento_ordenado --
   --------------------------------

   procedure eliminar_elemento_ordenado
     (pos: in Integer;
      V: in out T_vector_enteros)
   is
      i: Integer := 1;
   begin
      while (i /= pos) and (V(i) /= VACIO) loop
         i := i + 1;
      end loop;

      if i = pos and i /= VACIO then
         v(i) := VACIO;
      end if;

   end eliminar_elemento_ordenado;

   --------------------------------
   -- insertar_elemento_ordenado --
   --------------------------------

   procedure insertar_elemento_ordenado (num:  in Integer; V: in out T_Vector_Enteros) is
      i: Integer := 1;
      anterior: Integer := Integer'First;
      siguiente: Integer := V(i);
      sitio_encontrado:Boolean := num >= anterior and num <= siguiente;
   begin
      while not sitio_encontrado and i+1 /= V'Last+1 loop
         anterior:= v(i);
         siguiente:= v(i+1);
         sitio_encontrado := num >= anterior and num <= siguiente;
         i := i + 1;
      end loop;

      if sitio_encontrado then
         for j in reverse V'first+i..V'last loop
            V(j) := V(j-1);
         end loop;
            V(i) := num;
      else
         V(V'Last) := num;
      end if;
   end insertar_elemento_ordenado;

   ------------------------
   -- Eliminar_Repetidos --
   ------------------------

   procedure Eliminar_Repetidos (V: in out T_Vector_Enteros) is
   begin
      for i in V'range loop
         for j in V'range loop
            if i /= j and V(j) /= VACIO and V(i) = V(j) then
               V(j) := VACIO;
            end if;
         end loop;
      end loop;
   end Eliminar_Repetidos;

   ------------------------
   -- Letra_Mas_Repetida --
   ------------------------

   function Letra_Mas_Repetida (Texto: in T_Info_Texto) return T_LETRA is
      contadores: T_contadores_letras := (others => 0);
      letra: Character;
      p_cont, l_cont: Integer := 1;

   begin

      while p_cont+1 /= Texto.palabras'Last loop
         l_cont := 1;
         while l_cont+1 /= Texto.palabras(p_cont).Letras(Letras'Last) and Texto.palabras(p_cont).Letras(l_cont) /= ' ' loop
            letra := Text.palabras(p_cont).Letras(l_cont)
            l_cont := l_cont + 1;
         end loop;
         p_cont := p_cont + 1;
      end loop;



--      for p in texto.Palabras'range loop
--         put("Palabra numero " & p'img);
--         for j in texto.Palabras(p).Letras'range loop
--            put("Letra numero: " & j'img);
--            new_line;
--            letra := texto.Palabras(p).Letras(j);
--            if (letra >= 'A' and letra <= 'Z') then
--               contadores(letra) := contadores(letra) + 1;
--            end if;
--         end loop;
--         new_line(5);
--      end loop;

      for i in contadores'range loop
         put("Letra: " & i & " - Contador: " & contadores(i)'img);
         new_line;
      end loop;

      return 'Z';
   end Letra_Mas_Repetida;

   -----------------------
   -- Ordenar_Insercion --
   -----------------------

   procedure Ordenar_Insercion (V: in out T_Vector_Enteros) is
      V2: T_Vector_Enteros(V'range) := (others => Integer'Last);
   begin
      for i in V'range loop
         if (i = V'Last) then
            V2(V2'Last) := Integer'First;
         end if;
         insertar_elemento_ordenado(V(i), V2);
      end loop;
      V := V2;
   end Ordenar_Insercion;

   -----------------
   -- Es_Toeplitz --
   -----------------

   function Es_Toeplitz (M: T_Matriz) return Boolean is
      es_toplitz: Boolean:= True;
      row: Integer := 1;
      col: Integer;
   begin
      while es_toplitz and row /= M'Last(1) loop
         col:= 1;
         while es_toplitz and col /= M'Last(2) loop
            if M(row, col) /= M(row+1, col+1) then
               es_toplitz := False;
            end if;
            col := col + 1;
         end loop;
         row := row + 1;
      end loop;

      return es_toplitz;
   end Es_Toeplitz;

end Laboratorio06b;
