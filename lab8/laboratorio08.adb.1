WITH Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO;
USE Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO;

package body Laboratorio08 is

   -------------
   -- Comunes --
   -------------

   function Comunes (V1,V2: in T_vector_enteros) return Natural is
      i: Integer := V1'First;
      j: Integer := V2'First;
      comunes: Integer := 0;
   begin
      while i /= V1'Last+1 and j /= V2'Last+1 loop
         if V1(i) < V2(j) then
            i := i + 1 ;
         elsif V1(i) > V2(j) then
            j := j + 1;
         elsif V1(i) = V2(j) then
            comunes := comunes + 1;
            i := i + 1;
            j := j + 1;
         end if;
      end loop;

      return comunes;
   end Comunes;

   ---------------
   -- Encriptar --
   ---------------

   procedure Encriptar
     (N,Clave: in T_Vector_Enteros;
      Num: out T_Vector_Enteros)
   is

   begin
      Num := (others => 0);
      for i in reverse 1..N'Length loop
         if N'First+i-1 <= N'Last then
            Num(Clave(Clave'First+i-1)) := N(Clave(Clave'First+i-1));
         else
            Num(Num'First + Clave(Clave'First+i) - 1) := 0;
         end if;
         put("La posicion es: " & );
      end loop;

   end Encriptar;

   -----------------------
   -- Insertar_En_Medio --
   -----------------------

   procedure Insertar_En_Medio (L: in out T_Lista_Estatica; Num: in Integer)
   is
   begin
      --  Generated stub: replace with real body!
      pragma Compile_Time_Warning (Standard.True, "Insertar_En_Medio unimplemented");
      raise Program_Error with "Unimplemented procedure Insertar_En_Medio";
   end Insertar_En_Medio;

   -----------------------
   -- Borrar_Intermedio --
   -----------------------

   procedure Borrar_Intermedio (L: in out T_Lista_Estatica) is
   begin
      --  Generated stub: replace with real body!
      pragma Compile_Time_Warning (Standard.True, "Borrar_Intermedio unimplemented");
      raise Program_Error with "Unimplemented procedure Borrar_Intermedio";
   end Borrar_Intermedio;

   --------------------------------------
   -- Obtener_Num_Vecinos_por_Vivienda --
   --------------------------------------

   procedure Obtener_Num_Vecinos_por_Vivienda
     (C: in T_Comunidad;
      R:out T_Rascacielos)
   is
   begin
      --  Generated stub: replace with real body!
      pragma Compile_Time_Warning (Standard.True, "Obtener_Num_Vecinos_por_Vivienda unimplemented");
      raise Program_Error with "Unimplemented procedure Obtener_Num_Vecinos_por_Vivienda";
   end Obtener_Num_Vecinos_por_Vivienda;

   ----------------------
   -- Obtener_Consumos --
   ----------------------

   procedure Obtener_Consumos
     (E: in T_Edificio;
      Consumo_electrico: out Float;
      Consumo_gas: out T_Consumo_Medio_Manos)
   is
   begin
      --  Generated stub: replace with real body!
      pragma Compile_Time_Warning (Standard.True, "Obtener_Consumos unimplemented");
      raise Program_Error with "Unimplemented procedure Obtener_Consumos";
   end Obtener_Consumos;

end Laboratorio08;
